refresh:
  name: Refresh
  description: Refresh UniFi Network data

refresh_data:
  name: Refresh Data
  description: Alternative refresh command to update UniFi Network data
  fields:
    entry_id:
      name: Entry ID
      description: Optional specific configuration entry ID to refresh
      required: false
      example: "1234567890abcdef"
      selector:
        text:

toggle_rule:
  name: Toggle Rule
  description: Enable or disable a specific rule
  fields:
    rule_id:
      name: Rule ID
      description: >-
        UniFi rule ID to toggle. Use trigger.rule_id in automations.
      required: true
      example: "6786d55a88d13a5ebfc7fc26"
      selector:
        text:
    enabled:
      name: Enabled
      description: Whether the rule should be enabled (true) or disabled (false)
      required: true
      selector:
        boolean:
    rule_type:
      name: Rule Type
      description: >-
        Type of rule (optional, auto-detected from entity/unique ID if not provided).
        Only required when using raw UniFi IDs.
      required: false
      example: "firewall_policies"
      selector:
        select:
          options:
            - "firewall_policies"
            - "traffic_routes"
            - "port_forwards"
            - "traffic_rules"
            - "legacy_firewall_rules"
            - "qos_rules"
            - "wlans"
            - "vpn_clients"
            - "vpn_servers"
            - "port_profiles"
            - "networks"
            - "devices"

backup_rules:
  name: Backup rules
  description: Backup rules to a file
  fields:
    config_entry_id:
      name: Config Entry ID
      description: Optional specific configuration entry ID to use (will use first available if not specified)
      required: false
      example: "1234567890abcdef"
      selector:
        text:
    filename:
      name: Filename
      description: Name of the backup file
      required: true
      example: "unifi_rules_backup.json"
      selector:
        text:

restore_rules:
  name: Restore rules
  description: Restore rules from a backup file
  fields:
    config_entry_id:
      name: Config Entry ID
      description: Optional specific configuration entry ID to use (will use first available if not specified)
      required: false
      example: "1234567890abcdef"
      selector:
        text:
    filename:
      name: Filename
      description: Name of the backup file to restore from
      required: true
      example: "unifi_rules_backup.json"
      selector:
        text:
    force_restore:
      name: Force Restore
      description: If true, restore all rules even if they already exist (default is false - only restore missing rules)
      required: false
      default: false
      example: false
      selector:
        boolean:
    rule_ids:
      name: Rule IDs
      description: >-
        List of specific UniFi rule IDs to restore (optional). Use trigger.rule_id values from automations.
      required: false
      example: '["abc123", "def456"]'
      selector:
        object:
    name_filter:
      name: Name filter
      description: Only restore rules whose names contain this text (optional)
      required: false
      example: "guest"
      selector:
        text:
    rule_types:
      name: Rule types
      description: >-
        Only restore specific types of rules (optional). Options:
        "policy" (firewall policies, legacy firewall rules, traffic rules),
        "route" (traffic routes only),
        "port_forward" (port forwarding rules),
        "qos_rule" (QoS quality of service rules),
        "vpn_client" (VPN client configurations),
        "port_profile" (switch port profiles),
        "network" (network configurations)
      required: false
      example: '["policy", "route", "qos_rule"]'
      selector:
        select:
          options:
            - "policy"
            - "route"
            - "port_forward"
            - "qos_rule"
            - "vpn_client"
            - "port_profile"
            - "network"
          multiple: true

bulk_update_rules:
  name: Bulk update rules
  description: Enable or disable multiple rules based on name matching
  fields:
    name_filter:
      name: Name filter
      description: Update rules whose names contain this text
      required: true
      example: "guest"
      selector:
        text:
    state:
      name: State
      description: The desired state for the rules (true for enabled, false for disabled)
      required: true
      selector:
        boolean:

delete_rule:
  name: Delete Rule
  description: Delete a specific rule by ID
  fields:
    rule_id:
      name: Rule ID
      description: >-
        UniFi rule ID to delete. Use trigger.rule_id in automations.
      required: true
      example: "abc123"
      selector:
        text:
    rule_type:
      name: Rule Type
      description: >-
        Type of rule (optional, auto-detected from entity/unique ID if not provided).
        Only required when using raw UniFi IDs.
      required: false
      example: "firewall_policies"
      selector:
        select:
          options:
            - "firewall_policies"
            - "traffic_routes"
            - "port_forwards"
            - "traffic_rules"
            - "legacy_firewall_rules"
            - "qos_rules"
            - "wlans"
            - "vpn_clients"
            - "vpn_servers"
            - "port_profiles"

apply_template:
  name: Apply template
  description: Apply a rule template
  fields:
    template_id:
      name: Template ID
      description: ID of the template to apply
      required: true
      example: "guest_network"
      selector:
        text:
    variables:
      name: Variables
      description: Variables to use when applying the template
      required: false
      example: '{"network_id": "123456789"}'
      selector:
        object:

save_template:
  name: Save template
  description: Save a rule as a reusable template
  fields:
    rule_id:
      name: Rule ID
      description: >-
        UniFi rule ID to save as template. Use trigger.rule_id in automations.
      required: true
      example: "abc123"
      selector:
        text:
    template_id:
      name: Template ID
      description: ID for the new template
      required: true
      example: "guest_network_template"
      selector:
        text:
    rule_type:
      name: Rule type
      description: >-
        Type of rule (optional, auto-detected from entity/unique ID if not provided).
        Only required when using raw UniFi IDs.
      required: false
      example: "firewall_policies"
      selector:
        select:
          options:
            - "firewall_policies"
            - "traffic_routes"
            - "port_forwards"
            - "traffic_rules"
            - "legacy_firewall_rules"
            - "qos_rules"
            - "wlans"
            - "vpn_clients"
            - "vpn_servers"
            - "port_profiles"
            - "networks"
            - "devices"

force_cleanup:
  name: Force Cleanup
  description: Force cleanup of stale entities that might be left in the entity registry

force_remove_stale:
  name: Force Remove Stale
  description: Forcibly remove unavailable entities from the Home Assistant entity registry
  fields:
    remove_all:
      name: Remove All
      description: If true, removes all entities from this integration, not just unavailable ones
      required: false
      default: false
      selector:
        boolean:

sync_remote_curated:
  name: Sync Remote Curated Groups
  description: >-
    Fetch curated list file(s) from public raw URLs and create/update firewall group(s).
    Each file should follow the UNR Lists format (see docs at https://github.com/sirkirby/unr-lists).
    Header lines start with '# key: value' (name, type, description), then one entry per line.
  fields:
    entry_id:
      name: Entry ID
      description: Optional specific configuration entry ID to target
      required: false
      selector:
        text:
    urls:
      name: Curated list URLs
      description: >-
        One or more raw text URLs. Provide a list (YAML) or paste multiple lines here,
        one URL per line. Example: https://raw.githubusercontent.com/sirkirby/unr-lists/main/dns-ipv4.txt
      required: true
      selector:
        object:
